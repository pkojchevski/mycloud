{"version":3,"sources":["../../src/pages/reset-password/reset-password.module.ts","../../src/validators/email.ts","../../src/pages/reset-password/reset-password.ts"],"names":[],"mappings":"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","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ResetPasswordPage } from './reset-password';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ResetPasswordPage),\r\n  ],\r\n})\r\nexport class ResetPasswordPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.module.ts","import { FormControl } from '@angular/forms'\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EmailValidator {\r\n   static isValid (control: FormControl) {\r\n       const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/\r\n       .test(control.value);\r\n       if (re) {\r\n           return null;\r\n       } else {\r\n           return {\r\n               'invalidEmail':true\r\n           }\r\n       }\r\n   }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthProvider } from '../../providers/auth/auth';\r\nimport { EmailValidator } from '../../validators/email';\r\n\r\n/**\r\n * Generated class for the ResetPasswordPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-reset-password',\r\n  templateUrl: 'reset-password.html',\r\n})\r\nexport class ResetPasswordPage {\r\n  resetPasswordForm: FormGroup;\r\n\r\n  constructor(public navCtrl: NavController, \r\n    public navParams: NavParams,\r\n    public authService: AuthProvider,\r\n    public fb: FormBuilder, public alertCtrl: AlertController) {\r\n  \r\n      this.resetPasswordForm = fb.group({\r\n      email: ['', Validators.compose([Validators.required,\r\n       EmailValidator.isValid])]\r\n      });\r\n    }\r\n  \r\n    ionViewDidLoad() {\r\n      \r\n    }\r\n  \r\n    resetPassword() {\r\n      if(!this.resetPasswordForm.valid) {\r\n      //console.log(this.resetPasswordForm.value);\r\n      } else {\r\n        this.authService.resetPassword(this.resetPasswordForm.value.email).\r\n        then((user) => {\r\n          let alert = this.alertCtrl.create({\r\n            message:'We just sent You reset link to your email',\r\n            buttons: [\r\n              {\r\n                text:'OK',\r\n                role:'cancel',\r\n                handler: () => {this.navCtrl.push('login');}\r\n              }\r\n            ]\r\n          });\r\n          alert.present();\r\n        }, (error) => {\r\n          var errorMessage: string = error.message;\r\n          let errorAlert = this.alertCtrl.create({\r\n            message: errorMessage,\r\n            buttons:[{text:'OK', role:'cancel'}]\r\n          });\r\n          errorAlert.present;\r\n        })\r\n      }\r\n    }\r\n  \r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reset-password/reset-password.ts"],"sourceRoot":""}